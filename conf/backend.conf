akka {

  log-dead-letters = off
  log-dead-letters-during-shutdown = off
  logger-startup-timeout = 30s

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  //  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loglevel = "INFO"
  stdout-loglevel = "INFO"

  stream {
    debug-logging = off

    # Default flow materializer settings
    materializer {
      initial-input-buffer-size = 4
      max-input-buffer-size = 16
    }
  }

  actor {

    default-mailbox {
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
    }

    default-dispatcher {
      executor = "thread-pool-executor"

      thread-pool-executor {
        core-pool-size-min = 4
        core-pool-size-max = 4
        max-pool-size-min = 8
        max-pool-size-max = 8
      }

      throughput = 10
    }


    debug {
      lifecycle = on
      fsm = on
    }


  }


  http.server {
    socket-options {
//      so-send-buffer-size = 16 kB
      so-send-buffer-size = 1 kB
      tcp-no-delay = true
    }
  }




}


datasource {

  servers {
    enabled = ["server1", "server2", "server3"]
    server1 {
      host = "localhost"
      port = 8881
    }
    server2 {
      host = "localhost"
      port = 8882
    }
    server3 {
      host = "localhost"
      port = 8883
    }
  }

  updates-per-ccy-per-sec = 500

}

websocket {
  host = "localhost"
  port = 8080
}